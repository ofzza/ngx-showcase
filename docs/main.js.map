{"version":3,"file":"main.js","mappings":"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","sources":["./projects/ngx-showcase/src/lib/app/components/index.ts","./projects/ngx-showcase/src/lib/app/components/menu/index.ts","./projects/ngx-showcase/src/lib/app/components/menu/index.html","./projects/ngx-showcase/src/lib/app/ngx-showcase-app.module.ts","./projects/ngx-showcase/src/lib/app/routes.ts","./projects/ngx-showcase/src/lib/components/demo/Showcase/_showcase/index.ts","./projects/ngx-showcase/src/lib/components/demo/Showcase/_showcase/index.html","./projects/ngx-showcase/src/lib/components/demo/Showcase/index.ts","./projects/ngx-showcase/src/lib/components/demo/Showcase/index.html","./projects/ngx-showcase/src/lib/components/demo/index.ts","./projects/ngx-showcase/src/lib/components/index.ts","./projects/ngx-showcase/src/lib/components/syntax/SyntaxArea/_showcase/index.html","./projects/ngx-showcase/src/lib/components/syntax/SyntaxArea/_showcase/index.ts","./projects/ngx-showcase/src/lib/components/syntax/SyntaxArea/index.ts","./projects/ngx-showcase/src/lib/components/syntax/SyntaxArea/index.html","./projects/ngx-showcase/src/lib/components/syntax/SyntaxEdit/_showcase/index.ts","./projects/ngx-showcase/src/lib/components/syntax/SyntaxEdit/_showcase/index.html","./projects/ngx-showcase/src/lib/components/syntax/SyntaxEdit/index.ts","./projects/ngx-showcase/src/lib/components/syntax/SyntaxEdit/index.html","./projects/ngx-showcase/src/lib/components/syntax/index.ts","./projects/ngx-showcase/src/lib/ngx-showcase.module.ts","./projects/ngx-showcase/src/lib/pipes/index.ts","./projects/ngx-showcase/src/lib/pipes/resource/Fetch/_showcase/index.ts","./projects/ngx-showcase/src/lib/pipes/resource/Fetch/_showcase/index.html","./projects/ngx-showcase/src/lib/pipes/resource/Fetch/index.ts","./projects/ngx-showcase/src/lib/pipes/resource/String/_showcase/index.ts","./projects/ngx-showcase/src/lib/pipes/resource/String/_showcase/index.html","./projects/ngx-showcase/src/lib/pipes/resource/String/index.ts","./projects/ngx-showcase/src/lib/pipes/resource/index.ts","./projects/ngx-showcase/src/lib/pipes/syntax/ExtractInnerSyntax/_showcase/index.ts","./projects/ngx-showcase/src/lib/pipes/syntax/ExtractInnerSyntax/_showcase/index.html","./projects/ngx-showcase/src/lib/pipes/syntax/ExtractInnerSyntax/index.ts","./projects/ngx-showcase/src/lib/pipes/syntax/Highlight/_showcase/index.ts","./projects/ngx-showcase/src/lib/pipes/syntax/Highlight/_showcase/index.html","./projects/ngx-showcase/src/lib/pipes/syntax/Highlight/index.ts","./projects/ngx-showcase/src/lib/pipes/syntax/Markdown/_showcase/index.ts","./projects/ngx-showcase/src/lib/pipes/syntax/Markdown/_showcase/index.html","./projects/ngx-showcase/src/lib/pipes/syntax/Markdown/index.ts","./projects/ngx-showcase/src/lib/pipes/syntax/index.ts","./projects/ngx-showcase/src/lib/services/compilation/Compile/_showcase/index.ts","./projects/ngx-showcase/src/lib/services/compilation/Compile/_showcase/index.html","./projects/ngx-showcase/src/lib/services/compilation/Compile/index.ts","./projects/ngx-showcase/src/lib/services/compilation/index.ts","./projects/ngx-showcase/src/lib/services/index.ts","./projects/ngx-showcase/src/lib/services/resource/String/_showcase/index.ts","./projects/ngx-showcase/src/lib/services/resource/String/_showcase/index.html","./projects/ngx-showcase/src/lib/services/resource/String/index.ts","./projects/ngx-showcase/src/lib/services/resource/index.ts","./projects/ngx-showcase/src/lib/services/routing/Route/index.ts","./projects/ngx-showcase/src/lib/services/routing/ShowcaseBasedRouting/index.ts","./projects/ngx-showcase/src/lib/services/routing/index.ts","./projects/ngx-showcase/src/lib/services/syntax/Highlight/_showcase/index.ts","./projects/ngx-showcase/src/lib/services/syntax/Highlight/_showcase/index.html","./projects/ngx-showcase/src/lib/services/syntax/Highlight/highlight-js.ts","./projects/ngx-showcase/src/lib/services/syntax/Highlight/index.ts","./projects/ngx-showcase/src/lib/services/syntax/Highlight/worker.ts","./projects/ngx-showcase/src/lib/services/syntax/Markdown/_showcase/index.ts","./projects/ngx-showcase/src/lib/services/syntax/Markdown/_showcase/index.html","./projects/ngx-showcase/src/lib/services/syntax/Markdown/index.ts","./projects/ngx-showcase/src/lib/services/syntax/Markdown/markdown-it.ts","./projects/ngx-showcase/src/lib/services/syntax/Markdown/worker.ts","./projects/ngx-showcase/src/lib/services/syntax/index.ts","./projects/ngx-showcase/src/lib/services/syntax/workers.ts","./projects/ngx-showcase/src/public-api.ts","./projects/showcase/src/app/app-routing.module.ts","./projects/showcase/src/app/app.component.ts","./projects/showcase/src/app/app.component.html","./projects/showcase/src/app/app.module.ts","./projects/showcase/src/app/pages/frontpage/index.ts","./projects/showcase/src/app/pages/frontpage/index.html","./projects/showcase/src/app/pages/index.ts","./projects/showcase/src/environments/environment.ts","./projects/showcase/src/main.ts"],"sourcesContent":["// Aggregates and (re)exports all showcase app components\n// ----------------------------------------------------------------------------\nexport * from './menu';\n","// Application menu component, Creates a menu from routes\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { ArrayDataSource } from '@angular/cdk/collections';\nimport { Route } from '../../../services';\n\n/**\n * Application menu component, Creates a menu from routes\n */\n@Component({\n  selector: 'ngx-showcase-app-menu',\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class AppMenuComponent {\n  /**\n   * Holds page group's pages structure and definitions\n   */\n  @Input()\n  public routes: Route[] = [];\n\n  /**\n   * Holds page group's title\n   */\n  @Input()\n  public title = '';\n\n  /**\n   * Main menu links tree control\n   */\n  public _tree = new NestedTreeControl<Route>(node => node.childRoutes);\n  /**\n   * Main menu links tree data source\n   */\n  public get _treeDataSource() {\n    return new ArrayDataSource(this.routes);\n  }\n  /**\n   * Checks if route has children\n   */\n  public _treeHasChildren = (_: number, route: Route) => route.childRoutes !== undefined && !!route.childRoutes.length;\n\n  constructor(private _router: Router) {\n    // On route change\n    this._router.events.subscribe(e => {\n      if (e instanceof NavigationEnd) {\n        // Flatten all pages\n        const routes = flattenRoutes(this.routes);\n        // (Un)mark all routes\n        routes.forEach(route => (route.info.active = false));\n        // Expand and mark active route\n        let selected = routes.find(route => `/${route.fullPath.join('/')}` === e.url);\n        while (selected?.parentRoute) {\n          selected.info.active = selected.parentRoute.info.active = true;\n          this._tree.expand((selected = selected.parentRoute));\n        }\n      }\n    });\n  }\n}\n\n/**\n * Converts array of routes and their children into a flat array of routes\n * @param routes Routes to flatten\n */\nfunction flattenRoutes(routes: Route[]): Route[] {\n  // Initialize flattened routes\n  const flatRoutes: Route[] = [];\n  // Flatten routes\n  routes.forEach(route => {\n    // Register route\n    flatRoutes.push(route);\n    // Register route's children\n    if (route.childRoutes) {\n      flatRoutes.push(...flattenRoutes(route.childRoutes));\n    }\n  });\n  // Return flattened routes\n  return flatRoutes;\n}\n","<h5 *ngIf=\"title\" class=\"nav-link disabled\">{{title}}</h5>\n\n<!-- Component pages tree -->\n<cdk-tree [dataSource]=\"_treeDataSource\" [treeControl]=\"_tree\">\n  <!-- Page group -->\n  <cdk-nested-tree-node\n    *cdkTreeNodeDef=\"let node; when: _treeHasChildren\"\n    class=\"menu-tree-node menu-tree-node-group\"\n    [ngClass]=\"_tree.isExpanded(node) ? ['menu-tree-node-expanded'] : ['menu-tree-node-collapsed']\"\n  >\n    <!-- Link -->\n    <a cdkTreeNodeToggle [class.active]=\"node.info.active\" [routerLink]=\"node.component ? node.path : null\">\n      <span> {{ node.title }} </span>\n    </a>\n\n    <!-- Child links -->\n    <div [class.menu-tree-invisible]=\"!_tree.isExpanded(node)\">\n      <ng-container cdkTreeNodeOutlet></ng-container>\n    </div>\n  </cdk-nested-tree-node>\n\n  <!-- Page link -->\n  <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"menu-tree-node\">\n    <!-- Link -->\n    <a [class.active]=\"node.info.active\" [routerLink]=\"node.fullPath.join('/')\">\n      <span> {{ node.title }} </span>\n    </a>\n  </cdk-nested-tree-node>\n</cdk-tree>\n","// Showcasing application module\n// ----------------------------------------------------------------------------\n\n// Import modules\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n// Import main showcase library module as dependency\nimport { ShowcaseModule } from '../ngx-showcase.module';\nconst modules = [RouterModule, CdkTreeModule, ShowcaseModule];\n\n// (Re)export routes\nexport * from './routes';\n\n// Import and (re)export components\nexport * from './components';\nimport { AppMenuComponent } from './components';\nconst components = [AppMenuComponent];\n\n/**\n * Showcasing application module\n */\n@NgModule({\n  declarations: [...components],\n  imports: [...modules],\n  exports: [...modules, ...components],\n})\nexport class ShowcaseAppModule {}\n","// Register of all showcasing pages' routes\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Route, ShowcaseBasedRouting, ShowcaseArtifactTypes } from '../services';\n\n// Import components\nimport { SyntaxAreaComponent, SyntaxAreaComponentShowcase } from '../components';\nimport { SyntaxEditComponent, SyntaxEditComponentShowcase } from '../components';\nimport { ShowcaseComponent, ShowcaseComponentShowcase } from '../components';\n\n// Import pipes\nimport { ExtractInnerSyntaxPipe, ExtractInnerSyntaxPipeShowcase } from '../pipes';\nimport { FetchPipe, FetchPipeShowcase } from '../pipes';\nimport { StringPipe, StringPipeShowcase } from '../pipes';\nimport { MarkdownPipe, MarkdownAsyncPipe, MarkdownPipeShowcase } from '../pipes';\nimport { HighlightPipe, HighlightAsyncPipe, HighlightPipeShowcase } from '../pipes';\n\n// Import services\nimport { CompileService, CompileServiceShowcase } from '../services';\nimport { StringService, StringServiceShowcase } from '../services';\nimport { MarkdownService, MarkdownServiceShowcase } from '../services';\nimport { HighlightService, HighlightServiceShowcase } from '../services';\n\n/**\n * Showcase pages' routes\n */\nexport const routes = [\n  // Components and directives\n  // new Route('Components and Directives', 'components', undefined, {}, undefined, [\n  //   // Syntax processing pipes\n  //   new Route('Syntax processing', 'syntax', undefined, {}, undefined, [\n  //     // Syntax area component\n  //     ShowcaseBasedRouting.createRouteFromArtifact(SyntaxAreaComponent, ShowcaseArtifactTypes.Component, SyntaxAreaComponentShowcase),\n  //     // Syntax edit component\n  //     ShowcaseBasedRouting.createRouteFromArtifact(SyntaxEditComponent, ShowcaseArtifactTypes.Component, SyntaxEditComponentShowcase),\n  //   ]),\n  //   // Syntax processing pipes\n  //   new Route('Demoing', 'demo', undefined, {}, undefined, [\n  //     // Showcase component\n  //     ShowcaseBasedRouting.createRouteFromArtifact(ShowcaseComponent, ShowcaseArtifactTypes.Component, ShowcaseComponentShowcase),\n  //   ]),\n  // ]),\n  // Pipes\n  new Route('Pipes', 'pipes', undefined, {}, undefined, [\n    // Syntax processing pipes\n    new Route('Syntax processing', 'syntax', undefined, {}, undefined, [\n      // Extract inner syntax pipe\n      ShowcaseBasedRouting.createRouteFromArtifact(ExtractInnerSyntaxPipe, ShowcaseArtifactTypes.Pipe, ExtractInnerSyntaxPipeShowcase),\n      // Fetch resource pipe\n      ShowcaseBasedRouting.createRouteFromArtifact(FetchPipe, ShowcaseArtifactTypes.Pipe, FetchPipeShowcase),\n      // String manipulation pipe\n      ShowcaseBasedRouting.createRouteFromArtifact(StringPipe, ShowcaseArtifactTypes.Pipe, StringPipeShowcase),\n      // Markdown pipe\n      ShowcaseBasedRouting.createRouteFromArtifact(MarkdownPipe, ShowcaseArtifactTypes.Pipe, MarkdownPipeShowcase),\n      ShowcaseBasedRouting.createRouteFromArtifact(MarkdownAsyncPipe, ShowcaseArtifactTypes.Pipe, MarkdownPipeShowcase),\n      // Highlight pipe\n      ShowcaseBasedRouting.createRouteFromArtifact(HighlightPipe, ShowcaseArtifactTypes.Pipe, HighlightPipeShowcase),\n      ShowcaseBasedRouting.createRouteFromArtifact(HighlightAsyncPipe, ShowcaseArtifactTypes.Pipe, HighlightPipeShowcase),\n    ]),\n  ]),\n  // Services\n  new Route('Services', 'services', undefined, {}, undefined, [\n    // Syntax processing services\n    // new Route('Runtime compilation', 'compilation', undefined, {}, undefined, [\n    //   // Compile service\n    //   ShowcaseBasedRouting.createRouteFromArtifact(CompileService, ShowcaseArtifactTypes.Service, CompileServiceShowcase),\n    // ]),\n    // Syntax processing services\n    new Route('Resource processing', 'resource', undefined, {}, undefined, [\n      // String manipulation service\n      ShowcaseBasedRouting.createRouteFromArtifact(StringService, ShowcaseArtifactTypes.Service, StringServiceShowcase),\n    ]),\n    // Syntax processing services\n    new Route('Syntax processing', 'syntax', undefined, {}, undefined, [\n      // Markdown service\n      ShowcaseBasedRouting.createRouteFromArtifact(MarkdownService, ShowcaseArtifactTypes.Service, MarkdownServiceShowcase),\n      // Highlight service\n      ShowcaseBasedRouting.createRouteFromArtifact(HighlightService, ShowcaseArtifactTypes.Service, HighlightServiceShowcase),\n    ]),\n  ]),\n];\n","// Showcase component showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ShowcaseModule } from '../../../../ngx-showcase.module';\n\n/**\n * Syntax area component showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class ShowcaseComponentShowcase {}\n","<h1>Example</h1>\n\n<div [innerHTML]=\"'docs/example.md' | fetchAsync | async | markdownAsync | async\"></div>\n\n<hr />\n\n<ngx-showcase\n  [html]=\"'docs/example/index.html' | fetchAsync | async\"\n  [controller]=\"'docs/example/index.js' | fetchAsync | async\"\n  [style]=\"'docs/example/style.css' | fetchAsync | async\"\n></ngx-showcase>\n","// Showcase component, used to showcase live code\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { Component, OnInit, AfterViewInit, OnChanges, SimpleChanges, Input, ViewChild, ChangeDetectorRef, ViewContainerRef } from '@angular/core';\nimport {\n  CompileService,\n  ComponentCompiler,\n  ComponentCompilerHtmlError,\n  ComponentCompilerControllerError,\n  ComponentCompilerStyleError,\n} from '../../../services';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Syntax area component, used to display code/syntax\n */\n@Component({\n  selector: 'ngx-showcase',\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class ShowcaseComponent implements OnInit, AfterViewInit, OnChanges {\n  /**\n   * Modules that need to be included to render the component\n   */\n  @Input()\n  public modules: (new () => any)[] = [];\n\n  /**\n   * Debounce interval between detecting syntax changes and (re)rendering\n   */\n  @Input()\n  public debounce = 1000;\n\n  /**\n   * Initial HTML syntax to render\n   */\n  @Input()\n  public html?: string | null;\n  /**\n   * Initial Javascript controller syntax to render\n   */\n  @Input()\n  public controller?: string | null;\n  /**\n   * Initial style syntax to render\n   */\n  @Input()\n  public style?: string | null;\n\n  /**\n   * Holds reference to the output host element for (dynamically created) playground example component\n   */\n  @ViewChild('renderHost', { read: ViewContainerRef, static: true })\n  private _exampleHostEl?: ViewContainerRef;\n\n  /**\n   * Holds HTML syntax being edited\n   */\n  public _editingHtmlSyntax = '';\n  /**\n   * Holds controller syntax being edited\n   */\n  public _editingControllerSyntax = '';\n  /**\n   * Holds style syntax being edited\n   */\n  public _editingStyleSyntax = '';\n\n  /**\n   * Holds HTML syntax error caught while compiling syntax\n   */\n  public _editingHtmlSyntaxError?: Error;\n  /**\n   * Holds controller syntax error caught while compiling syntax\n   */\n  public _editingControllerSyntaxError?: Error;\n  /**\n   * Holds style syntax error caught while compiling syntax\n   */\n  public _editingStyleSyntaxError?: Error;\n\n  /**\n   * Holds bound component compiler\n   */\n  private _componentCompiler?: ComponentCompiler;\n\n  /**\n   * Subject used for debounce-ing the render (on detected changes) procedure\n   */\n  private _debouncedRenderSubject?: Subject<void>;\n\n  /**\n   * Handles HTML editing syntax change\n   * @param e Event descriptor\n   */\n  public _updateEditingHtmlSyntax(e: Event | string) {\n    // Update from input element event\n    if (e instanceof Event) {\n      this._editingHtmlSyntax = (e.target as HTMLInputElement).value;\n    }\n    // Update from direct value\n    else {\n      this._editingHtmlSyntax = e;\n    }\n\n    // Render editing syntax\n    this._render();\n  }\n  /**\n   * Handles controller editing syntax change\n   * @param e Event descriptor\n   */\n  public _updateEditingControllerSyntax(e: Event | string) {\n    // Update from input element event\n    if (e instanceof Event) {\n      this._editingControllerSyntax = (e.target as HTMLInputElement).value;\n    }\n    // Update from direct value\n    else {\n      this._editingControllerSyntax = e;\n    }\n\n    // Render editing syntax\n    this._render();\n  }\n  /**\n   * Handles style editing syntax change\n   * @param e Event descriptor\n   */\n  public _updateEditingStyleSyntax(e: Event | string) {\n    // Update from input element event\n    if (e instanceof Event) {\n      this._editingStyleSyntax = (e.target as HTMLInputElement).value;\n    }\n    // Update from direct value\n    else {\n      this._editingStyleSyntax = e;\n    }\n\n    // Render editing syntax\n    this._render();\n  }\n\n  /**\n   * Resets editing syntax to initial value\n   */\n  public _resetEditingSyntax() {\n    // Reset all syntax\n    this._editingHtmlSyntax = this.html || '';\n    this._editingControllerSyntax = this.controller || '';\n    this._editingStyleSyntax = this.style || '';\n\n    // Render editing syntax\n    this._render();\n  }\n\n  constructor(private _compile: CompileService, private _cd: ChangeDetectorRef) {}\n\n  public ngOnInit() {\n    // Set initial editing syntax\n    this._resetEditingSyntax();\n  }\n\n  public ngAfterViewInit() {\n    // Instantiate a bound compiler service\n    if (this._exampleHostEl) {\n      this._componentCompiler = this._compile.component(this._exampleHostEl);\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // Update editing syntax if not previously edited\n    if (changes.html && changes.html.previousValue !== this._editingHtmlSyntax) {\n      this._updateEditingHtmlSyntax(changes.html.currentValue);\n    }\n    if (changes.controller && changes.controller.previousValue !== this._editingControllerSyntax) {\n      this._updateEditingControllerSyntax(changes.controller.currentValue);\n    }\n    if (changes.style && changes.style.previousValue !== this._editingStyleSyntax) {\n      this._updateEditingStyleSyntax(changes.style.currentValue);\n    }\n  }\n\n  /**\n   * Schedules a debounced rendering of editing syntax into the render preview host element\n   */\n  private _render() {\n    // In debounced subject not initialized, initialize subject and trigger render\n    if (!this._debouncedRenderSubject) {\n      // Initialize debounced subject\n      this._debouncedRenderSubject = new Subject<void>();\n      this._debouncedRenderSubject.pipe(debounceTime(this.debounce)).subscribe(() => {\n        this._doRender();\n      });\n      // Trigger the first render right away\n      this._doRender();\n\n      // If debounced subject already in use, schedule a debounced render request\n    } else {\n      // Schedule a debounced render\n      this._debouncedRenderSubject.next();\n    }\n  }\n  /**\n   * Renders editing syntax into the render preview host element\n   */\n  private _doRender() {\n    // Reset errors\n    this._editingHtmlSyntaxError = undefined;\n    this._editingControllerSyntaxError = undefined;\n    this._editingStyleSyntaxError = undefined;\n\n    // Render into host component\n    this._componentCompiler?.compile(this._editingHtmlSyntax, this._editingControllerSyntax, this._editingStyleSyntax, this.modules).catch(err => {\n      if (err instanceof ComponentCompilerHtmlError) {\n        this._editingHtmlSyntaxError = err;\n      }\n      if (err instanceof ComponentCompilerControllerError) {\n        this._editingControllerSyntaxError = err;\n      }\n      if (err instanceof ComponentCompilerStyleError) {\n        this._editingStyleSyntaxError = err;\n      }\n    });\n\n    // Trigger change detection\n    this._cd.detectChanges();\n  }\n}\n","<!-- Syntax rendered -->\n<div #renderHost></div>\n\n<!-- Syntax edit -->\n<ngx-syntaxedit\n  [ngClass]=\"{ error: _editingHtmlSyntaxError }\"\n  [syntax]=\"_editingHtmlSyntax\"\n  [highlight]=\"'html'\"\n  [wrap]=\"false\"\n  [numbers]=\"false\"\n  (syntaxChange)=\"_updateEditingHtmlSyntax($event)\"\n></ngx-syntaxedit>\n<ngx-syntaxedit\n  [ngClass]=\"{ error: _editingControllerSyntaxError }\"\n  [syntax]=\"_editingControllerSyntax\"\n  [highlight]=\"'js'\"\n  [wrap]=\"false\"\n  [numbers]=\"false\"\n  (syntaxChange)=\"_updateEditingControllerSyntax($event)\"\n></ngx-syntaxedit>\n<ngx-syntaxedit\n  [ngClass]=\"{ error: _editingStyleSyntaxError }\"\n  [syntax]=\"_editingStyleSyntax\"\n  [highlight]=\"'css'\"\n  [wrap]=\"false\"\n  [numbers]=\"false\"\n  (syntaxChange)=\"_updateEditingStyleSyntax($event)\"\n></ngx-syntaxedit>\n<button (click)=\"_resetEditingSyntax()\">Reset</button>\n","// Aggregates and (re)exports all demoing components\n// ----------------------------------------------------------------------------\nexport * from './Showcase';\n","// Aggregates and (re)exports all components\n// ----------------------------------------------------------------------------\nexport * from './syntax';\nexport * from './demo';\n","<div class=\"showcase\">\n  <div>\n    <!-- TODO: ... -->\n    Exposes classes: .ngx-syntaxarea, .ngx-syntaxarea-linenums, .ngx-syntaxarea-syntax\n\n    <!-- Description -->\n    <div class=\"description\" [innerHTML]=\"'docs/example.md' | fetchAsync | async | markdownAsync:{} | async\"></div>\n  </div>\n\n  <!-- Display select -->\n  <div>\n    <button [class.selected]=\"_view === 1\" (click)=\"_view = 1\">Textarea</button>\n    <button [class.selected]=\"_view === 2\" (click)=\"_view = 2\">Plain div</button>\n    <button [class.selected]=\"_view === 3\" (click)=\"_view = 3\">Syntaxarea</button>\n    <button [class.selected]=\"_view === 4\" (click)=\"_view = 4\">Syntaxarea (wrapped)</button>\n\n    :::\n\n    <input #count type=\"number\" min=\"1\" max=\"1000\" [step]=\"1\" [value]=\"_count\" />\n    <button (click)=\"setCount(count.value)\">(Re)Generate</button>\n  </div>\n\n  <!-- Example code -->\n  <div class=\"syntax-container\">\n    <ng-container *ngIf=\"_view === 1\">\n      <div class=\"syntax\">\n        <textarea [value]=\"_multiply(('docs/syntax.js' | fetchAsync | async), _count)\"></textarea>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"_view === 2\">\n      <div class=\"syntax\">\n        <pre>\n          <code [innerHTML]=\"_multiply(('docs/syntax.js' | fetchAsync | async), _count) | highlightAsync:'js' | async\">\n          </code>\n        </pre>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"_view === 3\">\n      <div class=\"syntax\">\n        <ngx-syntaxarea\n          [syntax]=\"_multiply(('docs/syntax.js' | fetchAsync | async), _count) | highlightAsync:'js':10000:100:_monitor\"\n          [wrap]=\"false\"\n          [numbers]=\"true\"\n        ></ngx-syntaxarea>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"_view === 4\">\n      <div class=\"syntax\">\n        <ngx-syntaxarea\n          [syntax]=\"_multiply(('docs/syntax.js' | fetchAsync | async), _count) | highlightAsync:'js':10000:100:_monitor\"\n          [wrap]=\"true\"\n          [numbers]=\"true\"\n        ></ngx-syntaxarea>\n      </div>\n    </ng-container>\n  </div>\n</div>\n","// Syntax area component showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Syntax area component showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class SyntaxAreaComponentShowcase {\n  private _n = 1;\n  private _str?: string;\n  public _count = 1;\n  private _multiplied?: string;\n  public _view = 3;\n  public setCount(value: string) {\n    this._count = parseInt(value, 10) || 0;\n  }\n  public _multiply(str: null | string, n: number): string {\n    if (!str) return '';\n    if (this._n === n && this._str === str && this._multiplied) {\n      return this._multiplied as string;\n    } else {\n      return (this._multiplied = Array.from({ length: (this._n = n) + 1 }, _ => '').join((this._str = str))) as string;\n    }\n  }\n  public _monitor(res: any) {\n    console.log(`> Streaming:`, res.streaming ? `${res.streaming[0]}/${res.streaming[1]}` : 'Done!');\n  }\n}\n","// Syntax area component, used to display code/syntax\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport {\n  Component,\n  OnChanges,\n  SimpleChanges,\n  AfterViewInit,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Render perameters\n */\ntype TRenderRequest = { lines?: string[]; clear: boolean };\n/**\n * Line elements references type\n */\ntype TLineRefs = { numEl?: HTMLElement; syntaxEl: HTMLElement; lineEl: HTMLElement };\n\n/**\n * Syntax area component, used to display code/syntax\n */\n@Component({\n  selector: 'ngx-syntaxarea',\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class SyntaxAreaComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /**\n   * Syntax to display\n   */\n  @Input()\n  public syntax: string | Observable<string> | null = '';\n\n  /**\n   * If displayed syntax should be wrapped\n   */\n  @Input()\n  public wrap = false;\n\n  /**\n   * If line-numbers should be displayed\n   */\n  @Input()\n  public numbers = false;\n\n  /**\n   * Syntax host element\n   */\n  @ViewChild('syntaxarea', { static: true })\n  private _syntaxareaEl?: ElementRef<any>;\n\n  /**\n   * Loading status\n   */\n  @HostBinding('class.loading')\n  public _loading = false;\n\n  /**\n   * Private property, used to make syntaxarea component editable\n   */\n  @Input()\n  public _contentEditable = false;\n  /**\n   * Private property, used to make syntaxarea component editable\n   */\n  @Output()\n  public _syntaxChange = new EventEmitter<Event>();\n\n  /**\n   * Holds input syntax subscription being processed\n   */\n  private _syntaxSubscription?: Subscription;\n\n  /**\n   * Queued render request's lines to render\n   */\n  private _queuedRenderLines?: string[] = [];\n  /**\n   * Queued render request's clear status\n   */\n  private _queuedRenderClear = false;\n\n  /**\n   * Holds references to all rendered lines' HTML elements\n   */\n  public _linesElementsAll: TLineRefs[] = [];\n  /**\n   * Holds references to visible rendered lines' HTML elements\n   */\n  private _linesElementsVisible: TLineRefs[] = [];\n\n  /**\n   * Holds Subject instance used to debounce render requests\n   */\n  private _renderDebouncedSubject?: Subject<void>;\n  /**\n   * Holds Subject instance used to debounce visibility updating\n   */\n  private _visibilityDebouncedSubject?: Subject<void>;\n\n  constructor(private _cd: ChangeDetectorRef) {}\n\n  public ngAfterViewInit() {\n    // Validate all elements loaded\n    if (!this._syntaxareaEl) {\n      throw new Error('Missing syntaxarea syntax hosting element!');\n    }\n    // Subscribe to scroll events\n    this._syntaxareaEl.nativeElement.parentNode.addEventListener('scroll', () => {\n      this._updateViewVisibility();\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // Handle changes to syntax\n    if (changes.syntax) {\n      // Ingest syntax passed directly\n      if (typeof changes.syntax.currentValue === 'string') {\n        // Store syntax\n        const lines = changes.syntax.currentValue.split('\\n');\n        // Render\n        this._renderSyntax(lines, true);\n      }\n\n      // Ingest syntax streaming over observable instance\n      else if (changes.syntax.currentValue instanceof Observable) {\n        // Set loading status\n        this._loading = true;\n        this._cd.detectChanges();\n        // Reset syntax\n        let syntaxBuffer = undefined as string | undefined;\n        this._renderSyntax(undefined, true);\n        // Stream and process syntax\n        this._syntaxSubscription?.unsubscribe();\n        this._syntaxSubscription = changes.syntax.currentValue.subscribe(\n          (syntaxPacket: string) => {\n            // Split syntax into lines\n            const lines = syntaxPacket.split('\\n');\n            // Prepend syntax buffer\n            if (syntaxBuffer) {\n              if (lines.length) {\n                lines[0] = `${syntaxBuffer}${lines[0]}`;\n              } else {\n                lines.push(syntaxBuffer);\n              }\n              syntaxBuffer = undefined;\n            }\n            // Store last (potentially incomplete) line into syntax buffer\n            syntaxBuffer = lines.length ? lines.splice(lines.length - 1, 1)[0] : undefined;\n            // Render\n            this._renderSyntax(lines, false);\n          },\n          (error: Error) => {},\n          () => {\n            // Append buffered line into rendered output\n            if (syntaxBuffer) {\n              this._renderSyntax([syntaxBuffer], false);\n              syntaxBuffer = undefined;\n            }\n            // Reset loading status\n            this._loading = false;\n            this._syntaxSubscription?.unsubscribe();\n            this._cd.detectChanges();\n          },\n        );\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    // Unsubscribe from any further streaming syntax\n    this._syntaxSubscription?.unsubscribe();\n  }\n\n  /**\n   * (Debounced) Outputs syntax into view\n   */\n  private _renderSyntax(lines?: string[], clear = true) {\n    // Initialize debouncing\n    if (!this._renderDebouncedSubject) {\n      this._renderDebouncedSubject = new Subject<void>();\n      this._renderDebouncedSubject.pipe(debounceTime(10)).subscribe(renderReq => {\n        this._doRenderSyntax();\n      });\n    }\n    // Store lines and clear status\n    if (clear) {\n      this._queuedRenderLines = lines;\n      this._queuedRenderClear = true;\n    } else {\n      if (lines) {\n        (this._queuedRenderLines = this._queuedRenderLines || []).push(...lines);\n      }\n      this._queuedRenderClear = this._queuedRenderClear || clear;\n    }\n    // Schedule debounced visibility update\n    this._renderDebouncedSubject.next();\n  }\n  /**\n   * Outputs syntax into view\n   */\n  private _doRenderSyntax() {\n    // Validate all elements loaded\n    if (!this._syntaxareaEl) {\n      throw new Error('Missing syntaxarea syntax hosting element!');\n    }\n    // If requested, clear previous syntax\n    if (this._queuedRenderClear) {\n      this._syntaxareaEl.nativeElement.innerHTML = '';\n      this._linesElementsAll = [];\n      this._linesElementsVisible = [];\n    }\n    // If no syntax, done\n    if (!this._queuedRenderLines) {\n      return;\n    }\n    // Render syntax into host element\n    const refs = this._queuedRenderLines.map((line, i) => {\n      // Initialize elements\n      const lineEl = document.createElement('div'),\n        syntaxEl = document.createElement('span');\n      // Set elements' contents and append line\n      syntaxEl.className = 'ngx-syntax-line-syntax';\n      syntaxEl.innerHTML = line.trimEnd() || '&nbsp;';\n      let numEl = undefined as HTMLElement | undefined;\n      if (this.numbers) {\n        numEl = document.createElement('span');\n        numEl.className = 'ngx-syntax-line-number';\n        numEl.innerHTML = (this._linesElementsAll.length + i + 1).toString();\n        lineEl.append(numEl, syntaxEl);\n      } else {\n        lineEl.append(syntaxEl);\n      }\n      const lineRefs = { numEl, syntaxEl, lineEl } as TLineRefs;\n      // Update line visibility\n      this._setLineVisibility(lineRefs, false);\n      // Return composed line\n      return lineRefs;\n    });\n    this._syntaxareaEl.nativeElement.append(...refs.map(ref => ref.lineEl));\n    // Update lines' elements and count\n    const isFirstLines = this._linesElementsAll.length === 0;\n    this._linesElementsAll.push(...refs);\n    // Detect changes\n    this._cd.detectChanges();\n    // If view (re)rendered, update view visibility\n    this._updateViewVisibility();\n    // Clear render queue\n    this._queuedRenderLines = [];\n    this._queuedRenderClear = false;\n  }\n\n  /**\n   * (Debounced) Updates visibility of rows being currently displayed\n   */\n  private _updateViewVisibility() {\n    // Initialize debouncing\n    if (!this._visibilityDebouncedSubject) {\n      this._visibilityDebouncedSubject = new Subject<void>();\n      this._visibilityDebouncedSubject.pipe(debounceTime(50)).subscribe(() => {\n        this._doUpdateViewVisibility();\n      });\n    }\n    // Schedule debounced visibility update\n    this._visibilityDebouncedSubject.next();\n  }\n  /**\n   * Updates visibility of rows being currently displayed\n   */\n  private _doUpdateViewVisibility() {\n    // Calculate visible lines\n    const hostEl: HTMLElement = this._syntaxareaEl?.nativeElement.parentNode,\n      viewHeight = hostEl.clientHeight,\n      lineHeight = hostEl.scrollHeight / this._linesElementsAll.length,\n      viewFirstLineIndex = Math.floor(hostEl.scrollTop / lineHeight),\n      viewNumberOfDisplayedLines = Math.ceil(viewHeight / lineHeight);\n    // Hide already visible lines\n    for (const lineEl of this._linesElementsVisible) {\n      this._setLineVisibility(lineEl, false);\n    }\n    this._linesElementsVisible = [];\n    // Show visible lines\n    for (let i = 0, index = viewFirstLineIndex + i; i < viewNumberOfDisplayedLines && this._linesElementsAll.length > index; i++, index++) {\n      this._setLineVisibility(this._linesElementsAll[index], true);\n      this._linesElementsVisible.push(this._linesElementsAll[index]);\n    }\n  }\n\n  /**\n   * Updates line's visibility\n   * @param lineRefs Line element to update\n   * @param visible Visibility\n   */\n  private _setLineVisibility(lineRefs: TLineRefs, visible: boolean) {\n    // Hide line-numbers on non-showing rows\n    if (lineRefs.numEl) {\n      lineRefs.numEl.classList[visible ? 'remove' : 'add']('offview');\n    }\n    // Hide syntax content on non-showing rows\n    lineRefs.syntaxEl.classList[visible ? 'remove' : 'add']('offview');\n  }\n\n  /**\n   * Triggered on syntax being edited (only when used with private [_contentEditable] property set to true)\n   * @param e Input event\n   */\n  public _onInput(e: Event) {\n    // Forward event\n    this._syntaxChange.emit(e);\n  }\n\n  /**\n   * Gets current HTML state of syntax being edited\n   */\n  public _getEditingSyntaxContainerElement() {\n    return this._syntaxareaEl?.nativeElement;\n  }\n}\n","<!-- Component container -->\n<div class=\"content\" [ngClass]=\"[(wrap ? 'wrapped' : '')]\">\n  <div class=\"content-line-numbers\">{{_linesElementsAll.length.toString()}}</div>\n  <div #syntaxarea [contentEditable]=\"_contentEditable \" (input)=\"_onInput($event)\" class=\"content-syntax\"></div>\n</div>\n","// Syntax edit component showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Syntax edit component showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class SyntaxEditComponentShowcase {\n  public handleChange(syntax: string) {\n    console.log(syntax);\n  }\n}\n","<ngx-syntaxedit\n  [syntax]=\"'docs/example/index.js' | fetchAsync | async\"\n  [highlight]=\"'js'\"\n  [wrap]=\"false\"\n  [numbers]=\"false\"\n  (syntaxChange)=\"handleChange($event)\"\n></ngx-syntaxedit>\n","// Syntax edit component, used to edit code/syntax\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component, OnChanges, AfterViewChecked, SimpleChanges, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { SyntaxAreaComponent } from '../SyntaxArea';\nimport { HighlightService } from '../../../services';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Syntax area component, used to display code/syntax\n */\n@Component({\n  selector: 'ngx-syntaxedit',\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class SyntaxEditComponent implements OnChanges, AfterViewChecked {\n  /**\n   * Syntax to display\n   */\n  @Input()\n  public syntax: string | null = '';\n  /**\n   * Triggered on editing syntax changed\n   */\n  @Output()\n  public syntaxChange = new EventEmitter<string>();\n\n  /**\n   * Highlighting language to use\n   */\n  @Input()\n  public highlight?: string;\n\n  /**\n   * If displayed syntax should be wrapped\n   */\n  @Input()\n  public wrap = false;\n\n  /**\n   * If line-numbers should be displayed\n   */\n  @Input()\n  public numbers = false;\n\n  /**\n   * Syntaxarea component\n   */\n  @ViewChild('syntaxarea')\n  private _syntaxarea?: SyntaxAreaComponent;\n\n  /**\n   * Holds editing syntax\n   */\n  public _editingSyntax = '';\n\n  /**\n   * Holds caret position to return to after (re)render\n   */\n  private _previousCaretPosition = 0;\n\n  constructor(private _highlight: HighlightService) {}\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes.syntax) {\n      this.ingestSyntax(changes.syntax.currentValue);\n    }\n  }\n\n  private ingestSyntax(syntax?: string | null) {\n    // Handle empty syntax\n    if (!syntax) {\n      this._editingSyntax = '';\n      return;\n    }\n    // Compose updated (highlighted) syntax\n    const highlightedSyntax = this.highlight ? this._highlight.render(syntax, this.highlight) : syntax;\n    // Check for changes\n    if (true || this._syntaxarea?._getEditingSyntaxContainerElement().innerHTML !== highlightedSyntax) {\n      // Store cursor position\n      const element = this._syntaxarea?._getEditingSyntaxContainerElement();\n      this._previousCaretPosition = _getCaretPosition(element);\n      // Set updated syntax\n      this._editingSyntax = highlightedSyntax;\n    }\n  }\n\n  public ngAfterViewChecked() {\n    // Preserve cursor position\n    if (this._previousCaretPosition > 0) {\n      const element = this._syntaxarea?._getEditingSyntaxContainerElement();\n      if (document.activeElement === element) {\n        _setCaretPosition(element, this._previousCaretPosition);\n      }\n    }\n  }\n\n  /**\n   * Triggered on syntax being edited\n   * @param e Input event\n   */\n  public _onSyntaxChange(e: Event) {\n    // Emit change event\n    this.syntaxChange.emit((e.target as HTMLElement).innerText);\n    // (Re)ingest and highlight updated syntax\n    if (this.highlight) {\n      this.ingestSyntax((e.target as any)?.innerText);\n    }\n  }\n}\n\n/**\n * Gets caret position within the target element\n * @param element Element to look for caret index in\n */\nfunction _getCaretPosition(element: HTMLElement): number {\n  // Get caret index\n  if (window.getSelection !== undefined) {\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount !== 0) {\n      const range = window.getSelection()?.getRangeAt(0);\n      if (range) {\n        const preCaretRange = range.cloneRange();\n        preCaretRange.selectNodeContents(element);\n        preCaretRange.setEnd(range.endContainer, range.endOffset);\n        return preCaretRange.toString().length;\n      }\n    }\n  }\n  // No index found\n  return 0;\n}\n\nfunction _setCaretPosition(element: HTMLElement, position: number) {\n  if (position >= 0) {\n    const selection = window.getSelection(),\n      range = createRange(element, { position });\n\n    if (range) {\n      range.collapse(false);\n      selection?.removeAllRanges();\n      selection?.addRange(range);\n    }\n  }\n}\n\nfunction createRange(element: ChildNode, options: { position: number }, range?: Range): Range {\n  if (!range) {\n    range = document.createRange();\n    range.selectNode(element);\n    range.setStart(element, 0);\n  }\n\n  if (options.position === 0) {\n    range.setEnd(element, options.position);\n  } else if (element && options.position > 0) {\n    if (element.nodeType === Node.TEXT_NODE && element.textContent) {\n      if (element.textContent.length < options.position) {\n        options.position -= element.textContent.length;\n      } else {\n        range.setEnd(element, options.position);\n        options.position = 0;\n      }\n    } else {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < element.childNodes.length; i++) {\n        range = createRange(element.childNodes[i] as ChildNode, options, range);\n        if (options.position === 0) {\n          break;\n        }\n      }\n    }\n  }\n\n  return range;\n}\n","<div class=\"ngx-syntaxedit-container\">\n  <ngx-syntaxarea\n    #syntaxarea\n    [_contentEditable]=\"true\"\n    (_syntaxChange)=\"_onSyntaxChange($event)\"\n    [syntax]=\"_editingSyntax || ''\"\n    [wrap]=\"wrap\"\n    [numbers]=\"numbers\"\n  ></ngx-syntaxarea>\n</div>\n","// Aggregates and (re)exports all syntax processing components\n// ----------------------------------------------------------------------------\nexport * from './SyntaxArea';\nexport * from './SyntaxEdit';\n","// Main ngx-showcase library module\n// ----------------------------------------------------------------------------\n\n// Import modules\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nconst modules = [CommonModule, HttpClientModule];\n\n// Import and (re)export child components\nexport * from './components';\nimport { SyntaxAreaComponent, SyntaxAreaComponentShowcase } from './components';\nimport { SyntaxEditComponent, SyntaxEditComponentShowcase } from './components';\nimport { ShowcaseComponent, ShowcaseComponentShowcase } from './components';\nconst components = [\n  SyntaxAreaComponent,\n  SyntaxAreaComponentShowcase,\n  SyntaxEditComponent,\n  SyntaxEditComponentShowcase,\n  ShowcaseComponent,\n  ShowcaseComponentShowcase,\n];\n\n// Import and (re)export pipes\nexport * from './pipes';\nimport { ExtractInnerSyntaxPipe } from './pipes';\nimport { FetchPipe } from './pipes';\nimport { StringPipe } from './pipes';\nimport { MarkdownPipe, MarkdownAsyncPipe } from './pipes';\nimport { HighlightPipe, HighlightAsyncPipe } from './pipes';\nconst pipes = [ExtractInnerSyntaxPipe, FetchPipe, StringPipe, HighlightPipe, HighlightAsyncPipe, MarkdownPipe, MarkdownAsyncPipe];\n\n// Import and (re)export injectables\nexport * from './services';\nimport { CompileService } from './services';\nimport { StringService } from './services';\nimport { MarkdownService } from './services';\nimport { HighlightService } from './services';\nconst injectables = [CompileService, StringService, MarkdownService, HighlightService];\n\n/**\n * Main ngx-showcase library module\n */\n@NgModule({\n  declarations: [...components, ...pipes],\n  providers: [...injectables],\n  imports: [...modules],\n  exports: [...modules, ...components, ...pipes],\n})\nexport class ShowcaseModule {}\n\n// Register parent module with showcase service\nCompileService._registerParentModule(ShowcaseModule);\n","// Aggregates and (re)exports all pipes\n// ----------------------------------------------------------------------------\nexport * from './resource';\nexport * from './syntax';\n","// Fetch resource pipe showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Fetch resource pipe showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class FetchPipeShowcase {}\n","TODO: Fetch resource Pipe\n","// Fetch resource pipe, Fetches a remote resource from a URL\n// ----------------------------------------------------------------------------\n\n// TODO:\n// - [] Cache already loaded resources and resources already in process of\n//   being loaded\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Observable } from 'rxjs';\nimport { Pipe } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Fetch resource pipe, Fetches a remote resource from a URL\n */\n@Pipe({ name: 'fetchAsync' })\nexport class FetchPipe {\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * Fetches a remote resource from a URL\n   * @param url URL of the requested resource\n   */\n  public transform(url: string): Observable<string> {\n    return new Observable<string>(subscriber => {\n      // Fetch resource\n      this._http.get(url, { responseType: 'blob' }).subscribe(res => {\n        res.text().then(\n          data => {\n            subscriber.next(data);\n            subscriber.complete();\n          },\n          err => {\n            subscriber.error(err);\n          },\n        );\n      });\n    });\n  }\n}\n","// String manipulation pipe showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * String manipulation pipe showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class StringPipeShowcase {}\n","TODO: String manipulation Pipe\n","// String manipulation pipe, processes strings on the fly\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Pipe } from '@angular/core';\nimport { StringService } from '../../../services';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n// Configuration types\ntype CommandDefinition = keyof StringService | Partial<Record<keyof StringService, any[]>>;\n\n/**\n * Fetch resource pipe, Fetches a remote resource from a URL\n */\n@Pipe({ name: 'string' })\nexport class StringPipe {\n  constructor(private _string: StringService) {}\n\n  /**\n   * Processes a string via a list of string manipulation commands\n   * For example:\n   * ```ts\n   * 'Hello, my name is # Alice #!' | string:[{ 'extract': ['#', '#'] }, 'trim']\n   * - Results in: 'Alice'\n   * ```\n   * @param str String value to be manipulated\n   * @param commands Array of definitions of commands to execute. Each command definition is one of:\n   * - A string equaling the name of the string manipulation to perform (also a name of a method on the `StringService` service)\n   * - A single property object where:\n   *   - The name of the property is the name of the string manipulation to perform (also a name of a method on the `StringService` service)\n   *   - The value of the property is an array of arguments to be passed to the manipulation (see arguments for method of same name on the `StringService` service)\n   */\n  public transform(str?: string | null, commands: CommandDefinition[] = []): string {\n    return processByRunningCommands(this._string, str, commands);\n  }\n}\n\n/**\n * Processes a string via a list of string manipulation commands\n * @param _string StringService instance\n * @param str String to run commands on\n * @param commands Array of definitions of commands to execute. Each command definition is one of\n */\nfunction processByRunningCommands(_string: StringService, str?: string | null, commands: CommandDefinition[] = []): string {\n  // Initialize processing result\n  let processed = str || '';\n  // Execure requested commands\n  for (const command of commands) {\n    // Process command\n    let commandName: keyof StringService = '' as keyof StringService;\n    let commandArguments: any[] = [];\n    // Process string command definition\n    if (typeof command === 'string') {\n      // Select command\n      commandName = command;\n    }\n    // Process object command definition\n    else if (command instanceof Object) {\n      // Verify command definition\n      if (Object.keys(command).length !== 1) {\n        throw new Error(\n          `StringPipe ('' | string) does not support command \"${JSON.stringify(\n            command,\n          )}\" not supported! Each command definitions is only allowed a single property`,\n        );\n      }\n      // Select command\n      commandName = Object.keys(command)[0] as keyof StringService;\n      commandArguments = command[commandName] || [];\n    }\n    // Verify the command is supported\n    if (!commandName || !_string[commandName]) {\n      throw new Error(`StringPipe ('' | string) does not support command \"${command}\" not supported!`);\n    }\n    // Run command\n    processed = _string[commandName](processed, ...commandArguments);\n  }\n  // Return processing result\n  return processed;\n}\n","// Aggregates and (re)exports all resource processing pipes\n// ----------------------------------------------------------------------------\nexport * from './Fetch';\nexport * from './String';\n","// ExtractInnerSyntax pipe showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * ExtractInnerSyntax pipe showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class ExtractInnerSyntaxPipeShowcase {}\n","TODO: ExtractInnerSyntax Pipe\n","// Extract inner syntax pipe\n// Extracts unprocessed syntax contained inside an HTML element, ngTemplate, or raw string\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Pipe, TemplateRef } from '@angular/core';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Extract inner syntax pipe\n * Extracts unprocessed syntax contained inside an HTML element, ngTemplate, or raw string\n */\n@Pipe({ name: 'inner' })\nexport class ExtractInnerSyntaxPipe {\n  /**\n   * Extracts unprocessed syntax contained inside the target\n   * @param target Target to extract unprocessed syntax from\n   */\n  public transform(target: HTMLTextAreaElement | HTMLInputElement | HTMLElement | TemplateRef<any> | string): string {\n    // Extract from <textarea /> element (used because <textarea /> element's aren't preprocessed when used in templates)\n    if (target instanceof HTMLTextAreaElement || target instanceof HTMLInputElement) {\n      return target.value;\n    }\n    // Extract from HTML element\n    else if (target instanceof HTMLElement) {\n      return target.innerHTML;\n    }\n    // Extract from <ng-template />\n    else if (target instanceof TemplateRef) {\n      // TODO: Implement extraction from <ng-template /> by dynamically creating a component consuming and projecting\n      // the template (@angular/compiler), then fetching projected content\n      throw new Error('Extracting syntax from TemplateRef not implemented yet!');\n    }\n    // Consider already extracted\n    else {\n      return target;\n    }\n  }\n}\n","// Markdown pipe showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Markdown pipe showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class MarkdownPipeShowcase {}\n","TODO: Markdown Pipe\n","// Highlight pipe, Converts syntax of a known language into HTML\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Pipe } from '@angular/core';\nimport { HighlightService, TWorkerInvocationResponse } from '../../../services';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Highlight pipe, Converts syntax of a known language into HTML\n */\n@Pipe({ name: 'highlight' })\nexport class HighlightPipe {\n  constructor(private _highlight: HighlightService) {}\n\n  /**\n   * Converts syntax of a known language into HTML\n   * @param syntax Language code syntax to convert\n   */\n  public transform(syntax?: string | null, lang?: string): string {\n    return this._highlight.render(syntax, lang);\n  }\n}\n\n/**\n * Highlight pipe, Converts syntax of a known language into HTML asynchronously using a web-worker\n */\n@Pipe({ name: 'highlightAsync' })\nexport class HighlightAsyncPipe {\n  constructor(private _highlight: HighlightService) {}\n\n  /**\n   * Converts syntax of a known language into HTML asynchronously using a web-worker\n   * @param syntax Language code syntax to convert\n   * @param lang (Optional) Language to highlight as\n   * @param streamPacketSize (Optional) If set to larger than 0, will stream result in packets of requested size\n   * (allows for main thread not to get blocked processing a single large packet)\n   * @param streamPacketDelay (Optional) If streaming packets, sets delay between packets\n   * (allows for main thread not to get blocked by too many packets)\n   * @param streamMonitorCallback (Optional) Callback invoked with every streamed package as it is streamed\n   */\n  public transform(\n    syntax?: string | null,\n    lang?: string,\n    streamPacketSize: number = 0,\n    streamPacketDelay: number = 1,\n    streamMonitorCallback?: (res: TWorkerInvocationResponse | Error) => void,\n  ): Observable<string> {\n    return (\n      this._highlight\n        // Render\n        .renderAsync(syntax || '', lang, streamPacketSize, streamPacketDelay, streamMonitorCallback)\n        // Resolve value or error\n        .pipe(map(data => (data instanceof Error ? '' : data)))\n    );\n  }\n}\n","// Highlight pipe showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Highlight pipe showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class HighlightPipeShowcase {}\n","TODO: Highlight Pipe\n","// Markdown pipe, Converts markdown syntax into HTML\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Pipe } from '@angular/core';\nimport { MarkdownService, TMarkdownOptions, TWorkerInvocationResponse } from '../../../services';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Markdown pipe, Converts markdown syntax into HTML\n */\n@Pipe({ name: 'markdown' })\nexport class MarkdownPipe {\n  constructor(private _markdown: MarkdownService) {}\n\n  /**\n   * Converts markdown syntax into HTML\n   * @param syntax Markdown syntax to convert\n   * @param options (Optional) Markdown rendering options:\n   *  - trim: If syntax should be trimmed before processing\n   *  ... trimming will remove whitespace and the start and end of syntax\n   *  ... trimming will remove minimum common indentation whitespace from all lines\n   *  - breaks: Convert line-breaks into <br /> elements\n   *  - linkify: Convert URLs to links\n   *  - quotes: Replacement quotes\n   */\n  public transform(syntax?: string | null, options?: TMarkdownOptions): string {\n    return this._markdown.render(syntax, options);\n  }\n}\n\n/**\n * Markdown pipe, Converts markdown syntax into HTML asynchronously using a web-worker\n */\n@Pipe({ name: 'markdownAsync' })\nexport class MarkdownAsyncPipe {\n  constructor(private _markdown: MarkdownService) {}\n\n  /**\n   * Converts syntax of a known language into HTML asynchronously using a web-worker\n   * @param syntax Language code syntax to convert\n   * @param options (Optional) Markdown rendering options:\n   *  - trim: If syntax should be trimmed before processing\n   *  ... trimming will remove whitespace and the start and end of syntax\n   *  ... trimming will remove minimum common indentation whitespace from all lines\n   *  - breaks: Convert line-breaks into <br /> elements\n   *  - linkify: Convert URLs to links\n   *  - quotes: Replacement quotes\n   * @param streamPacketSize (Optional) If set to larger than 0, will stream result in packets of requested size\n   * (allows for main thread not to get blocked processing a single large packet)\n   * @param streamPacketDelay (Optional) If streaming packets, sets delay between packets\n   * (allows for main thread not to get blocked by too many packets)\n   * @param streamMonitorCallback (Optional) Callback invoked with every streamed package as it is streamed\n   */\n  public transform(\n    syntax?: string | null,\n    options?: TMarkdownOptions,\n    streamPacketSize: number = 0,\n    streamPacketDelay: number = 1,\n    streamMonitorCallback?: (res: TWorkerInvocationResponse | Error) => void,\n  ): Observable<string> {\n    return (\n      this._markdown\n        // Render\n        .renderAsync(syntax || '', options, streamPacketSize, streamPacketDelay, streamMonitorCallback)\n        // Resolve value or error\n        .pipe(map(data => (data instanceof Error ? '' : data)))\n    );\n  }\n}\n","// Aggregates and (re)exports all syntax processing pipes\n// ----------------------------------------------------------------------------\nexport * from './ExtractInnerSyntax';\nexport * from './Markdown';\nexport * from './Highlight';\n","// Compilation service showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Compilation service showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class CompileServiceShowcase {}\n","TODO: Compile Service\n","// Compilation service, provides mechanisms for compiling angular entities during runtime\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Injectable, ModuleWithProviders, NgModule, Component, Compiler, Injector, NgModuleRef, ViewContainerRef, ComponentRef } from '@angular/core';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Markdown syntax service, Provides conversion from markdown syntax into HTML syntax\n */\n@Injectable()\nexport class CompileService {\n  /**\n   * Holds reference to the parent module\n   */\n  public static _parentModuleRef?: ModuleWithProviders<{}>;\n  /**\n   * Registers a reference to the parent module\n   * @param parentModule reference to the parent module\n   */\n  public static _registerParentModule(parentModule: any) {\n    this._parentModuleRef = parentModule as ModuleWithProviders<{}>;\n  }\n\n  constructor(private _compiler: Compiler, private _injector: Injector, private _module: NgModuleRef<any>) {}\n\n  /**\n   * Creates a component compiler instance bound to a host view container\n   * @param host View container to render into\n   */\n  public component(hostEl: ViewContainerRef) {\n    return new ComponentCompiler(hostEl, this._compiler, this._injector, this._module);\n  }\n}\n\n/**\n * Component compiler bound to host view container\n */\nexport class ComponentCompiler {\n  /**\n   * Holds reference to (dynamically created) playground example component\n   */\n  private _compiledComponent?: ComponentRef<any>;\n\n  constructor(private _hostEl: ViewContainerRef, private _compiler: Compiler, private _injector: Injector, private _module: NgModuleRef<any>) {}\n\n  /**\n   * Renders editing syntax into the render preview host element\n   */\n  public async compile(html: string, controller: string, style: string, modules: (new () => any)[]): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      // Create a dynamic component\n      const dynamicComponentClass = Component({\n        template: html,\n        styles: [style],\n      })(\n        class {\n          constructor() {\n            // Try evaluating the controller\n            try {\n              new Function(controller).bind(this)();\n            } catch (err: any) {\n              reject(new ComponentCompilerControllerError(err));\n            }\n          }\n        },\n      );\n\n      // Create dynamic module\n      const dynamicModuleClass = NgModule({\n        imports: [...(CompileService._parentModuleRef ? [CompileService._parentModuleRef] : []), ...modules],\n        declarations: [dynamicComponentClass],\n      })(class {});\n\n      // Attempt rendering component\n      try {\n        // Create and inject dynamically created component\n        this._compiler.compileModuleAndAllComponentsAsync(dynamicModuleClass).then(moduleWithFactories => {\n          if (this._hostEl) {\n            try {\n              // Ready component for injection\n              const moduleRef = moduleWithFactories.ngModuleFactory.create(this._injector),\n                factory = moduleWithFactories.componentFactories[0],\n                component = factory.create(moduleRef.injector, [], null, this._module);\n\n              // Destroy previously dynamically added components\n              if (this._compiledComponent) {\n                this._compiledComponent.destroy();\n              }\n\n              // Inject component\n              this._compiledComponent = component;\n              this._hostEl.clear();\n              this._hostEl.insert(this._compiledComponent.hostView);\n\n              // Resolve compilation done\n              resolve();\n            } catch (err: any) {\n              reject(new ComponentCompilerHtmlError(err));\n            }\n          }\n        });\n      } catch (err: any) {\n        reject(new ComponentCompilerHtmlError(err));\n      }\n    });\n  }\n}\n\n/**\n * Component HTML compilation error\n */\nexport class ComponentCompilerHtmlError extends Error {}\n/**\n * Component Controller compilation error\n */\nexport class ComponentCompilerControllerError extends Error {}\n/**\n * Component Style compilation error\n */\nexport class ComponentCompilerStyleError extends Error {}\n","// Aggregates and (re)exports all compilation processing services\n// ----------------------------------------------------------------------------\nexport * from './Compile';\n","// Aggregates and (re)exports all services\n// ----------------------------------------------------------------------------\nexport * from './compilation';\nexport * from './routing';\nexport * from './resource';\nexport * from './syntax';\n","// String service showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Highlight service showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class StringServiceShowcase {}\n","TODO: String Service\n","// String manipulation service, provides functionality for string processing\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Injectable } from '@angular/core';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * String manipulation service, provides functionality for string processing\n */\n@Injectable()\nexport class StringService {\n  /**\n   * Trims a string by removing whitespace on both start and end. using `String.trim()` JS function.\n   * @param str String to trim\n   * @returns Trimmer string\n   */\n  public trim(str?: string | null): string {\n    return str ? str.trim() : '';\n  }\n\n  /**\n   *\n   * @param str\n   * @param from\n   * @param to\n   * @returns\n   */\n  public extract(str?: string | null, from?: string, to?: string): string {\n    // Check if\n    if (!str) {\n      return '';\n    }\n    // Initialize result\n    let processed = str;\n    // Extract required section \"from\" string\n    if (from) {\n      // Find \"from\" section\n      const index = processed.indexOf(from);\n      // Extract string after the \"from\" section\n      if (index !== -1) {\n        processed = processed.substring(index + from.length);\n      }\n    }\n    // Extract required section \"to\" string\n    if (to) {\n      // Find \"to\" section\n      const index = processed.indexOf(to);\n      // Extract string after the \"to\" section\n      if (index !== -1) {\n        processed = processed.substring(0, index);\n      }\n    }\n    // Return result\n    return processed;\n  }\n}\n","// Aggregates and (re)exports all resource processing services\n// ----------------------------------------------------------------------------\nexport * from './String';\n","// Route data-model\n// Holds a description of a route, as generated by any of the services in the \"routing\" namespace\n// ----------------------------------------------------------------------------\n\n/**\n * Route definition\n */\nexport class Route {\n  /**\n   * Instantiates a new Route\n   * @param path Route path\n   * @param title Route title\n   * @param component Route component\n   * @param parentRoute (Optional) Parent route\n   * @param childRoutes (Optional) Child routes\n   */\n  constructor(\n    public title: string,\n    public relativePath: string,\n    public component: any,\n    public info: any = {},\n    public parentRoute?: Route,\n    public childRoutes?: Route[],\n  ) {\n    // Set self as parent to child routes\n    if (this.childRoutes) {\n      this.childRoutes.forEach(route => {\n        route.parentRoute = this;\n      });\n    }\n  }\n\n  /**\n   * Returns full route path composed from parent route full-path and route's relative path\n   */\n  public get fullPath(): string[] {\n    return [...(this.parentRoute ? this.parentRoute.fullPath : []), this.relativePath];\n  }\n}\n","// ShowcaseBasedRouting service\n// Provides mechanisms to quickly generate routing based on components/directives/pipes/services and other artifacts that\n// Which need to be represented by generated routes\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Injectable } from '@angular/core';\nimport { Route } from '../Route';\n\n/**\n * Types of artifacts which can be represented by routes\n */\nexport enum ShowcaseArtifactTypes {\n  Module = 'Module',\n  Component = 'Component',\n  Directive = 'Directive',\n  Pipe = 'Pipe',\n  Injectable = 'Injectable',\n  Service = 'Service',\n  Model = 'Model',\n}\n\n/**\n * ShowcaseBasedRouting service\n * Provides mechanisms to quickly generate routing based on components/directives/pipes/services and other artifacts that\n * Which need to be represented by generated routes\n */\nexport class ShowcaseBasedRouting {\n  /**\n   * Creates a route based of the artifact provided\n   * @param artifact Artifact to create a route for\n   * @param artifactType Artifact type\n   * @param showcaseComponent Component to load when route is hit\n   * @param childRoutes Child routes Child routes nested within created route\n   */\n  public static createRouteFromArtifact(\n    artifact: any,\n    artifactType: ShowcaseArtifactTypes,\n    showcaseComponent: undefined | any,\n    childRoutes: Route[] = [],\n  ): Route {\n    // Extract route title and path from artifact\n    let relativePath: string, title: string;\n    // Extract component path and title\n    if (artifactType === ShowcaseArtifactTypes.Component) {\n      relativePath = artifact.name.replace(/component/gi, '');\n      title = `<${artifact?.ɵcmp?.selectors?.[0]?.[0] || `${relativePath}`} />`;\n    }\n    // Extract pipe path and title\n    else if (artifactType === ShowcaseArtifactTypes.Pipe) {\n      relativePath = artifact.name.toLowerCase().replace(/pipe/gi, '');\n      title = `| ${artifact?.ɵpipe?.name || artifact.name.replace(/pipe/gi, '')}`;\n    }\n    // Extract service path and title\n    else if (artifactType === ShowcaseArtifactTypes.Service) {\n      relativePath = artifact.name.toLowerCase().replace(/service/gi, '');\n      title = `${artifact.name.replace(/pipe/gi, '')}`;\n    }\n    // Artifact type not supported\n    else {\n      throw new Error(`Artifact type of \"${artifactType}\" not yet supported!`);\n    }\n\n    // Return composed route\n    return new Route(title, relativePath, showcaseComponent, {}, undefined, childRoutes);\n  }\n\n  /**\n   * Generates a RouterModule format of routes\n   * @param routes Route definitions to generate RouterModule format routes from\n   */\n  public static generateRoutingModuleRoutes(routes: Route[]): any[] {\n    // Initialize router routes\n    const routerRoutes: any[] = [];\n    // Convert routes and their children into router routes\n    routes.forEach(route => {\n      // Convert route\n      if (route.component) {\n        routerRoutes.push({ path: route.fullPath.join('/'), component: route.component });\n      }\n      // Convert route child routes\n      if (route.childRoutes) {\n        routerRoutes.push(...ShowcaseBasedRouting.generateRoutingModuleRoutes(route.childRoutes));\n      }\n    });\n    // Return router routes\n    return routerRoutes;\n  }\n}\n","// Aggregates and (re)exports all routing services\n// ----------------------------------------------------------------------------\nexport * from './Route';\nexport * from './ShowcaseBasedRouting';\n","// Highlight service showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Highlight service showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class HighlightServiceShowcase {}\n","TODO: Compile Service\n","// highlight.js library wrapper\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport hljs from 'highlight.js';\n\n/**\n * Registers a highlight.js language syntax\n * @param key Language key\n * @param language Language syntax definition\n */\nexport function registerLanguage(key: string | string[], language: any) {\n  // Register language under multiple keys\n  if (key instanceof Array) {\n    key.forEach(k => hljs.registerLanguage(k, language));\n  }\n  // Register language\n  else {\n    hljs.registerLanguage(key, language);\n  }\n}\n\n/**\n * Converts a language code syntax into highlighted HTML\n * @param syntax Language code syntax to convert\n * @param language Language to convert into\n */\nexport function render(syntax: string, language?: string): string {\n  // Convert into explicitly specified language\n  if (language) {\n    return hljs.highlight(language, syntax).value;\n  }\n\n  // Auto detect target language\n  else {\n    return hljs.highlightAuto(syntax).value;\n  }\n}\n","// Syntax highlighting service, Highlights syntax of a known language\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Observable, Subscriber, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { registerLanguage, render } from './highlight-js';\nimport { TWorkerInvocationRequest, TWorkerInvocationResponse } from '../workers';\n\n// (Re)export worker\nexport * from './worker';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Syntax highlighting service, Highlights syntax of a known language\n */\n@Injectable()\nexport class HighlightService {\n  /**\n   * Holds web-worker factory callback\n   */\n  private static _workerFactory?: () => Worker;\n\n  /**\n   * Registers a web-worker factory\n   * @param workerFactory Factory callback function used to create a web-worker\n   */\n  public static registerWorker(workerFactory: () => Worker) {\n    HighlightService._workerFactory = workerFactory;\n  }\n\n  /**\n   * Holds this instance's web-worker\n   */\n  private _worker?: Worker;\n\n  /**\n   * Holds unique ID to be used for next message to web-worker\n   */\n  private _idNext = 0;\n\n  /**\n   * Holds promises awaiting resolution/rejection by their unique message IDs\n   */\n  private _pendingAsyncQueue: Record<\n    number,\n    {\n      subscriber: Subscriber<string | Error>;\n      monitor?: (res: TWorkerInvocationResponse | Error) => void;\n    }\n  > = {};\n\n  constructor() {\n    // If using web-workers, instantiate a web-worker\n    if (HighlightService._workerFactory) {\n      try {\n        this._worker = HighlightService._workerFactory();\n        this._worker.addEventListener('message', this.processAsyncResult.bind(this));\n      } catch (_) {}\n    }\n  }\n\n  /**\n   * Registers a highlight.js language syntax\n   * @param key Language key\n   * @param language Language syntax definition\n   */\n  public registerLanguage(key: string | string[], language: any) {\n    // Register language with the local instance of highlight.js\n    registerLanguage(key, language);\n  }\n\n  /**\n   * Converts a language code syntax into highlighted HTML\n   * @param syntax Language code syntax to convert\n   * @param language Language to convert into\n   */\n  public render(syntax?: string | null, language?: string): string {\n    // If no syntax, return not-rendered\n    if (!syntax) {\n      return '';\n    }\n    // Convert into explicitly specified language\n    return render(syntax, language);\n  }\n\n  /**\n   * Converts a language code syntax into highlighted HTML asynchronously using a web-worker\n   * @param syntax Language code syntax to convert\n   * @param language Language to convert into\n   * @param streamPacketSize (Optional) If set to larger than 0, will stream result in packets of requested size\n   * (allows for main thread not to get blocked processing a single large packet)\n   * @param streamPacketDelay (Optional) If streaming packets, sets delay between packets\n   * (allows for main thread not to get blocked by too many packets)\n   * @param streamMonitorCallback (Optional) Callback invoked with every streamed package as it is streamed\n   */\n  public renderAsync(\n    syntax?: string | null,\n    language?: string,\n    streamPacketSize: number = 0,\n    streamPacketDelay: number = 1,\n    streamMonitorCallback?: (res: TWorkerInvocationResponse | Error) => void,\n  ): Observable<string | Error> {\n    // If no syntax, return not-rendered\n    if (!syntax) {\n      return of<string>(syntax || '');\n    }\n    // Convert into a observable to be resolved asynchronously\n    return new Observable<string | Error>(subscriber => {\n      // If using a web-worker, invoke a render using web-worker\n      if (this._worker) {\n        // Register to pending messages queue\n        const id = this._idNext++;\n        this._pendingAsyncQueue[id] = { subscriber, monitor: streamMonitorCallback };\n\n        // Post message to web-worker\n        const req: TWorkerInvocationRequest = {\n          id,\n          method: 'render',\n          args: { syntax, language },\n          streamPacketSize,\n          streamPacketDelay,\n        };\n        this._worker.postMessage(JSON.stringify(req));\n      }\n\n      // If service-worker not available, execute sync render\n      else {\n        setTimeout(() => {\n          try {\n            const result = render(syntax, language);\n            subscriber.next(result);\n            subscriber.complete();\n          } catch (err) {\n            subscriber.error(err);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Processes response messages from web-worker\n   * @param msg Response message\n   */\n  private processAsyncResult(msg: MessageEvent<any>) {\n    // Parse received data\n    const res = JSON.parse(msg.data) as TWorkerInvocationResponse;\n\n    // Check if message expected\n    if (!this._pendingAsyncQueue[res.id]) {\n      throw new Error('Received unexpected message from web-worker!');\n    }\n\n    // Handle successful execution\n    if (res.success) {\n      // If streaming, decorate cache string to signify streaming complete or not complete\n      const isStreamComplete = !res.streaming || res.streaming[0] === res.streaming[1];\n      // Resolve result\n      this._pendingAsyncQueue[res.id].subscriber.next(res.result);\n      // If monitoring stream, invoke monitor callback\n      this._pendingAsyncQueue[res.id].monitor?.(res);\n      // Check if finished streaming\n      if (isStreamComplete) {\n        this._pendingAsyncQueue[res.id].subscriber.complete();\n        delete this._pendingAsyncQueue[res.id];\n      }\n    }\n\n    // Handle failed execution\n    else {\n      // Throw error to subscriber\n      const err = new Error(res.result);\n      this._pendingAsyncQueue[res.id].subscriber.error(err);\n      // If monitoring stream, invoke monitor callback\n      this._pendingAsyncQueue[res.id].monitor?.(err);\n    }\n  }\n}\n","// Syntax highlighting worker, Highlights syntax of a known language\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { registerLanguage, render } from './highlight-js';\nimport { TWorkerInvocationRequest, TWorkerInvocationResponse } from '../workers';\n\n// Declare \"postMessage\", since including webworker tpe definitions causes conflicts\ndeclare function postMessage(message: any): void;\n\n/**\n * Initializes highlight service's web-worker\n */\nexport function initializeHighlightServiceWebWorker(): (key: string | string[], language: any) => void {\n  // Listen for messages\n  addEventListener('message', msg => {\n    // Parse received data\n    const data = JSON.parse(msg.data) as TWorkerInvocationRequest;\n\n    // Invoke \"render\" function and post result bact to main script\n    if (data.method === 'render') {\n      try {\n        // Render\n        const result = render(data.args.syntax, data.args.language),\n          resultTotalSize = result.length;\n        // Stream result\n        if (data.streamPacketSize > 0) {\n          // tslint:disable-next-line: no-shadowed-variable\n          (function stream(data, result, streamedLength, resultTotalSize) {\n            // Post message\n            const packet = result.substr(0, data.streamPacketSize),\n              res: TWorkerInvocationResponse = {\n                id: data.id,\n                success: true,\n                result: packet,\n                streaming: [streamedLength + packet.length, resultTotalSize],\n              };\n            postMessage(JSON.stringify(res));\n            // Remove sent section of result\n            result = result.substr(packet.length);\n            // Schedule next packet\n            if (result.length) {\n              setTimeout(() => {\n                stream(data, result, streamedLength + packet.length, resultTotalSize);\n              }, data.streamPacketDelay);\n            }\n          })(data, result, 0, resultTotalSize);\n        }\n        // ...or send in one piece\n        else {\n          const res: TWorkerInvocationResponse = { id: data.id, success: true, result, streaming: false };\n          postMessage(JSON.stringify(res));\n        }\n      } catch (err: any) {\n        const errMessage = err.message.toString(),\n          res: TWorkerInvocationResponse = { id: data.id, success: false, result: errMessage, streaming: false };\n        postMessage(JSON.stringify(res));\n      }\n    }\n  });\n\n  // Return a way to register languages\n  return registerLanguage;\n}\n","// Markdown service showcase\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Markdown service showcase\n */\n@Component({\n  templateUrl: './index.html',\n  styleUrls: ['./style.scss'],\n})\nexport class MarkdownServiceShowcase {}\n","TODO: Markdown Service\n","// Markdown syntax service, Provides conversion from markdown syntax into HTML syntax\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Observable, Subscriber, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { TMarkdownOptions, render } from './markdown-it';\nimport { TWorkerInvocationRequest, TWorkerInvocationResponse } from '../workers';\nimport { HighlightService } from '../Highlight';\n\n// (Re)export types and worker\nexport { TMarkdownOptions } from './markdown-it';\nexport * from './worker';\n\n// (Re)export showcase component\nexport * from './_showcase';\n\n/**\n * Markdown syntax service, Provides conversion from markdown syntax into HTML syntax\n */\n@Injectable()\nexport class MarkdownService {\n  /**\n   * Holds web-worker factory callback\n   */\n  private static _workerFactory?: () => Worker;\n\n  /**\n   * Registers a web-worker factory\n   * @param workerFactory Factory callback function used to create a web-worker\n   */\n  public static registerWorker(workerFactory: () => Worker) {\n    MarkdownService._workerFactory = workerFactory;\n  }\n\n  /**\n   * Holds this instance's web-worker\n   */\n  private _worker?: Worker;\n\n  /**\n   * Holds unique ID to be used for next message to web-worker\n   */\n  private _idNext = 0;\n\n  /**\n   * Holds promises awaiting resolution/rejection by their unique message IDs\n   */\n  private _pendingAsyncQueue: Record<\n    number,\n    {\n      subscriber: Subscriber<string | Error>;\n      monitor?: (res: TWorkerInvocationResponse | Error) => void;\n    }\n  > = {};\n\n  constructor(protected _highlight: HighlightService) {\n    // If using web-workers, instantiate a web-worker\n    if (MarkdownService._workerFactory) {\n      try {\n        this._worker = MarkdownService._workerFactory();\n        this._worker.addEventListener('message', this.processAsyncResult.bind(this));\n      } catch (_) {}\n    }\n  }\n\n  /**\n   * Converts markdown syntax into HTML\n   * @param syntax Markdown syntax to convert\n   * @param options (Optional) Markdown rendering options:\n   *  - trim: If syntax should be trimmed before processing\n   *  ... trimming will remove whitespace and the start and end of syntax\n   *  ... trimming will remove minimum common indentation whitespace from all lines\n   *  - breaks: Convert line-breaks into <br /> elements\n   *  - linkify: Convert URLs to links\n   *  - quotes: Replacement quotes\n   */\n  public render(syntax?: string | null, options?: TMarkdownOptions): string {\n    // If no syntax, return not-rendered\n    if (!syntax) {\n      return syntax || '';\n    }\n    // Convert into HTML representation\n    return render(syntax, options, this._highlight);\n  }\n\n  /**\n   * Converts markdown syntax into HTML asynchronously using a web-worker\n   * @param syntax Markdown syntax to convert\n   * @param options (Optional) Markdown rendering options:\n   *  - trim: If syntax should be trimmed before processing\n   *  ... trimming will remove whitespace and the start and end of syntax\n   *  ... trimming will remove minimum common indentation whitespace from all lines\n   *  - breaks: Convert line-breaks into <br /> elements\n   *  - linkify: Convert URLs to links\n   *  - quotes: Replacement quotes\n   * @param streamPacketSize (Optional) If set to larger than 0, will stream result in packets of requested size\n   * (allows for main thread not to get blocked processing a single large packet)\n   * @param streamPacketDelay (Optional) If streaming packets, sets delay between packets\n   * (allows for main thread not to get blocked by too many packets)\n   * @param streamMonitorCallback (Optional) Callback invoked with every streamed package as it is streamed\n   */\n  public renderAsync(\n    syntax?: string | null,\n    options?: TMarkdownOptions,\n    streamPacketSize: number = 0,\n    streamPacketDelay: number = 1,\n    streamMonitorCallback?: (res: TWorkerInvocationResponse | Error) => void,\n  ): Observable<string | Error> {\n    // If no syntax, return not-rendered\n    if (!syntax) {\n      return of<string>(syntax || '');\n    }\n    // Convert into a observable to be resolved asynchronously\n    return new Observable<string | Error>(subscriber => {\n      // If using a web-worker, invoke a render using web-worker\n      if (this._worker) {\n        // Register to pending messages queue\n        const id = this._idNext++;\n        this._pendingAsyncQueue[id] = { subscriber, monitor: streamMonitorCallback };\n\n        // Post message to web-worker\n        const req: TWorkerInvocationRequest = {\n          id,\n          method: 'render',\n          args: { syntax, options },\n          streamPacketSize,\n          streamPacketDelay,\n        };\n        this._worker.postMessage(JSON.stringify(req));\n      }\n\n      // If service-worker not available, execute sync render\n      else {\n        setTimeout(() => {\n          try {\n            const result = render(syntax, options, this._highlight);\n            subscriber.next(result);\n            subscriber.complete();\n          } catch (err) {\n            subscriber.error(err);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Processes response messages from web-worker\n   * @param msg Response message\n   */\n  private processAsyncResult(msg: MessageEvent<any>) {\n    // Parse received data\n    const res = JSON.parse(msg.data) as TWorkerInvocationResponse;\n\n    // Check if message expected\n    if (!this._pendingAsyncQueue[res.id]) {\n      throw new Error('Received unexpected message from web-worker!');\n    }\n\n    // Handle successful execution\n    if (res.success) {\n      // If streaming, decorate cache string to signify streaming complete or not complete\n      const isStreamComplete = !res.streaming || res.streaming[0] === res.streaming[1];\n      // Resolve result\n      this._pendingAsyncQueue[res.id].subscriber.next(res.result);\n      // If monitoring stream, invoke monitor callback\n      this._pendingAsyncQueue[res.id].monitor?.(res);\n      // Check if finished streaming\n      if (isStreamComplete) {\n        this._pendingAsyncQueue[res.id].subscriber.complete();\n        delete this._pendingAsyncQueue[res.id];\n      }\n    }\n\n    // Handle failed execution\n    else {\n      // Throw error to subscriber\n      const err = new Error(res.result);\n      this._pendingAsyncQueue[res.id].subscriber.error(err);\n      // If monitoring stream, invoke monitor callback\n      this._pendingAsyncQueue[res.id].monitor?.(err);\n    }\n  }\n}\n","// markdown-it library wrapper\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport * as MarkdownIt from 'markdown-it';\nimport { HighlightService } from '../Highlight';\n\n/**\n * MarkdownIt instance\n */\n// const _markdownit = new MarkdownIt();\n\n/**\n * MarkdownIt options type\n */\nexport type TMarkdownOptions = {\n  // If syntax should be trimmed before processing\n  // ... trimming will remove whitespace and the start and end of syntax\n  // ... trimming will remove minimum common indentation whitespace from all lines\n  trim?: boolean;\n  // Convert line-breaks into <br /> elements\n  breaks?: boolean;\n  // Convert URLs to links\n  linkify?: boolean;\n  // Replacement quotes\n  quotes?: string | string[];\n};\n\n/**\n * Default MarkdownIt options\n */\nconst defaultOptions: TMarkdownOptions = {\n  trim: true,\n  breaks: true,\n  linkify: false,\n  quotes: undefined,\n};\n\n/**\n * Converts markdown syntax into HTML\n * @param syntax Markdown syntax to convert\n * @param options (Optional) Markdown rendering options:\n *  - trim: If syntax should be trimmed before processing\n *  ... trimming will remove whitespace and the start and end of syntax\n *  ... trimming will remove minimum common indentation whitespace from all lines\n *  - breaks: Convert line-breaks into <br /> elements\n *  - linkify: Convert URLs to links\n *  - quotes: Replacement quotes\n * @param highlight (Optional) Instance of the Highlighting service\n */\nexport function render(syntax: string, options?: TMarkdownOptions, highlight?: HighlightService) {\n  const _markdownit = new MarkdownIt();\n  // Set options\n  const margedOptions = {\n    // Default options\n    ...defaultOptions,\n    // User configured options\n    ...options,\n    // Non exposed options\n    ...(highlight\n      ? {\n          highlight: highlight.render,\n        }\n      : {}),\n  };\n  _markdownit.set(margedOptions);\n  // Trim\n  if (margedOptions.trim) {\n    const lines = syntax.replace(/\\t/g, '  ').split('\\n');\n    const indentationDepth = lines.reduce((min, line) => {\n      // Test min indentation against a proper line\n      if (line && line.trim()) {\n        const indentation = line.length - line.trimStart().length;\n        return indentation < min ? indentation : min;\n      }\n      // ... or keepo current indentation for inproper lines\n      else {\n        return min;\n      }\n    }, Number.MAX_SAFE_INTEGER);\n    syntax = lines.map(line => line.substr(indentationDepth)).join('\\n');\n  }\n  // Render\n  return _markdownit.render(syntax);\n}\n","// Markdown syntax worker, Provides conversion from markdown syntax into HTML syntax\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { render } from './markdown-it';\nimport { TWorkerInvocationRequest, TWorkerInvocationResponse } from '../workers';\nimport { HighlightService } from '../Highlight';\n\n// Declare \"postMessage\", since including webworker tpe definitions causes conflicts\ndeclare function postMessage(message: any): void;\n\n/**\n * Initializes highlight service's web-worker\n */\nexport function initializeMarkdownServiceWebWorker(highlight?: HighlightService) {\n  // Listen for messages\n  addEventListener('message', msg => {\n    // Parse received data\n    const data = JSON.parse(msg.data) as TWorkerInvocationRequest;\n\n    // Invoke \"render\" function and post result bact to main script\n    if (data.method === 'render') {\n      try {\n        // Render\n        const result = render(data.args.syntax, data.args.options, highlight),\n          resultTotalSize = result.length;\n        // Stream result\n        if (data.streamPacketSize > 0) {\n          // tslint:disable-next-line: no-shadowed-variable\n          (function stream(data, result, streamedLength, resultTotalSize) {\n            // Post message\n            const packet = result.substr(0, data.streamPacketSize),\n              res: TWorkerInvocationResponse = {\n                id: data.id,\n                success: true,\n                result: packet,\n                streaming: [streamedLength + packet.length, resultTotalSize],\n              };\n            postMessage(JSON.stringify(res));\n            // Remove sent section of result\n            result = result.substr(packet.length);\n            // Schedule next packet\n            if (result.length) {\n              setTimeout(() => {\n                stream(data, result, streamedLength + packet.length, resultTotalSize);\n              }, data.streamPacketDelay);\n            }\n          })(data, result, 0, resultTotalSize);\n        }\n        // ...or send in one piece\n        else {\n          const res: TWorkerInvocationResponse = { id: data.id, success: true, result, streaming: false };\n          postMessage(JSON.stringify(res));\n        }\n      } catch (err: any) {\n        const errMessage = err.message.toString(),\n          res: TWorkerInvocationResponse = { id: data.id, success: false, result: errMessage, streaming: false };\n        postMessage(JSON.stringify(res));\n      }\n    }\n  });\n}\n","// Aggregates and (re)exports all syntax processing services\n// ----------------------------------------------------------------------------\nexport * from './workers';\nexport * from './Markdown';\nexport * from './Highlight';\n","// Worker communication reusable types\n// ----------------------------------------------------------------------------\n\nexport type TWorkerInvocationRequest = { id: number; method: string; args: Record<string, any>; streamPacketSize: number; streamPacketDelay: number };\nexport type TWorkerInvocationResponse = { id: number; success: boolean; result: string; streaming: number[] | false };\n","/*\n * Public API Surface of ngx-showcase\n */\nexport * from './lib/app/ngx-showcase-app.module';\nexport * from './lib/ngx-showcase.module';\n","// Routing module\n// Defines application routes and registers them with the app\n// ----------------------------------------------------------------------------\n\n// Import modules\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ShowcaseAppModule, ShowcaseBasedRouting } from '../../../ngx-showcase/src/public-api';\n\n// Import pages/routes\nimport { FrontpageComponent } from './pages';\nimport { routes as generatedRoutes } from '../../../ngx-showcase/src/public-api';\n\n// Routes definition\nconst routes: Routes = [\n  // Frontpage\n  { path: '', component: FrontpageComponent },\n  // Generated component pages' routes\n  ...ShowcaseBasedRouting.generateRoutingModuleRoutes(generatedRoutes),\n  // Redirect to default\n  { path: '**', redirectTo: '/' },\n];\n\n/**\n * Routing module\n * Defines application routes and registers them with the app\n */\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes), ShowcaseAppModule],\n  exports: [RouterModule, ShowcaseAppModule],\n})\nexport class AppRoutingModule {}\n","// Showcase application main component\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\nimport { routes, MarkdownService, HighlightService } from '../../../ngx-showcase/src/public-api';\n\n// Import highlight.js languages\nimport xml from 'highlight.js/lib/languages/xml';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport css from 'highlight.js/lib/languages/css';\n\n// Register markdown web-worker\nMarkdownService.registerWorker(() => {\n  return new Worker(new URL('../workers/markdown.worker', import.meta.url), {\n    type: 'module',\n  });\n});\n// Register highlighting web-worker\nHighlightService.registerWorker(() => {\n  return new Worker(new URL('../workers/highlight.worker', import.meta.url), {\n    type: 'module',\n  });\n});\n\n/**\n * Showcase application main component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  /**\n   * Showcase registered routes\n   */\n  public _routes = routes;\n\n  constructor(highlight: HighlightService) {\n    // Register highlighting languages\n    highlight.registerLanguage(['xml', 'html'], xml);\n    highlight.registerLanguage(['js', 'javascript'], javascript);\n    highlight.registerLanguage(['css'], css);\n  }\n}\n","<!-- Header -->\n<header class=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand mr-1\" [routerLink]=\"'/'\">NGX SHOWCASE</a>\n</header>\n\n<!-- Showcase -->\n<content>\n  <!-- Showcase menu -->\n  <nav class=\"navbar-dark bg-dark\">\n    <ngx-showcase-app-menu [routes]=\"_routes\"></ngx-showcase-app-menu>\n  </nav>\n  <!-- Router outlet -->\n  <main>\n    <router-outlet></router-outlet>\n  </main>\n</content>\n","// Main ngx-showcase app's application module\n// ----------------------------------------------------------------------------\n\n// Import modules\nimport '@angular/compiler';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\n// Import ngx-showcase library's showcase application components\nimport { ShowcaseAppModule } from '../../../ngx-showcase/src/public-api';\n\n// Import main application component\nimport { AppComponent } from './app.component';\nimport { FrontpageComponent } from './pages';\n\n/**\n * Main ngx-showcase app's application module\n */\n@NgModule({\n  declarations: [AppComponent, FrontpageComponent],\n  imports: [BrowserModule, AppRoutingModule, ShowcaseAppModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// Frontpage page component\n// ----------------------------------------------------------------------------\n\n// Import dependencies\nimport { Component } from '@angular/core';\n\n/**\n * Frontpage page component\n */\n@Component({\n  templateUrl: 'index.html',\n  styleUrls: ['style.scss'],\n})\nexport class FrontpageComponent {}\n","<h1>NGX SHOWCASE LIBRARY</h1>\n<div [innerHTML]=\"'README.md' | fetchAsync | async | string:[{ extract: ['<!--intro.start-->', '<!--intro.end-->']}, 'trim'] | markdown:{}\"></div>\n\n<hr />\n<div\n  [innerHTML]=\"'README.md' | fetchAsync | async | string:[{ extract: ['<!--gettingstarted.start-->', '<!--gettingstarted.end-->']}, 'trim'] | markdown:{}\"\n></div>\n","// Aggregates and (re)exports all pages\n// ----------------------------------------------------------------------------\nexport * from './frontpage';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["ShowcaseComponentShowcase","selectors","decls","vars","consts","template","i0","SyntaxAreaComponentShowcase","constructor","setCount","value","_count","parseInt","_multiply","str","n","_n","_str","_multiplied","Array","from","length","_","join","_monitor","res","console","log","streaming","SyntaxEditComponentShowcase","handleChange","syntax","ctx","map","HighlightPipe","_highlight","transform","lang","render","pure","HighlightAsyncPipe","streamPacketSize","streamPacketDelay","streamMonitorCallback","renderAsync","pipe","data","Error","MarkdownPipe","_markdown","options","MarkdownAsyncPipe","ModuleWithProviders","NgModule","Component","Compiler","Injector","NgModuleRef","ViewContainerRef","ComponentRef","CompileService","_compiler","_injector","_module","_registerParentModule","parentModule","_parentModuleRef","component","hostEl","ComponentCompiler","factory","_hostEl","compile","html","controller","style","modules","Promise","resolve","reject","dynamicComponentClass","styles","Function","bind","err","ComponentCompilerControllerError","dynamicModuleClass","imports","declarations","compileModuleAndAllComponentsAsync","then","moduleWithFactories","moduleRef","ngModuleFactory","create","componentFactories","injector","_compiledComponent","destroy","clear","insert","hostView","ComponentCompilerHtmlError","ComponentCompilerStyleError","Observable","of","registerLanguage","HighlightService","_workerFactory","_worker","addEventListener","processAsyncResult","registerWorker","workerFactory","key","language","subscriber","id","_idNext","_pendingAsyncQueue","monitor","req","method","args","postMessage","JSON","stringify","setTimeout","result","next","complete","error","msg","parse","success","isStreamComplete","MarkdownService","FrontpageComponent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}